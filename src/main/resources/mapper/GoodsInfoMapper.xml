<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.website.dao.GoodsInfoMapper">
  <resultMap id="BaseResultMap" type="com.website.model.bean.GoodsInfo">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_code" jdbcType="VARCHAR" property="goodsCode" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="ad_words" jdbcType="VARCHAR" property="adWords" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="spec" jdbcType="VARCHAR" property="spec" />
    <result column="sale_count" jdbcType="INTEGER" property="saleCount" />
    <result column="cost_price" jdbcType="DOUBLE" property="costPrice" />
    <result column="market_price" jdbcType="DOUBLE" property="marketPrice" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="label_id" jdbcType="INTEGER" property="labelId" />
    <result column="stock_type" jdbcType="INTEGER" property="stockType" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="return_time" jdbcType="DOUBLE" property="returnTime" />
    <result column="commitment" jdbcType="VARCHAR" property="commitment" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="shelf_time" jdbcType="TIMESTAMP" property="shelfTime" />
    <result column="return_type" jdbcType="INTEGER" property="returnType" />
    <result column="goods_pic" jdbcType="VARCHAR" property="goodsPic" />
    <result column="vip_price" jdbcType="DOUBLE" property="vipPrice" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.website.model.bean.GoodsInfoWithBLOBs">
    <result column="description" jdbcType="LONGVARCHAR" property="description" />
    <result column="goods_desc" jdbcType="LONGVARCHAR" property="goodsDesc" />
  </resultMap>
  <sql id="Base_Column_List">
    goods_id, goods_code, goods_name, ad_words, create_user_id, status, spec, sale_count, 
    cost_price, market_price, category_id, category_name, channel_id, label_id, stock_type, 
    stock, return_time, commitment, create_date, update_date, shelf_time, return_type, 
    goods_pic, vip_price
  </sql>
  <sql id="Blob_Column_List">
    description, goods_desc
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_info
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  
  
	<select id="selectGoodsListByMap" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
    	,
    	<include refid="Blob_Column_List" />
		from goods_info
		where 
			<if test="goodsCode != null">
				goods_code = #{goodsCode,jdbcType=VARCHAR} and
			</if>
			
			1=1
	</select>
	<select id="selectGoodsInfoByMap" parameterType="java.util.Map" resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
    	,
    	<include refid="Blob_Column_List" />
		from goods_info
		where 
			<if test="goodsCode != null">
				goods_code = #{goodsCode,jdbcType=VARCHAR} and
			</if>
			
			1=1
	</select>
	
	
  <insert id="insert" parameterType="com.website.model.bean.GoodsInfoWithBLOBs">
    insert into goods_info (goods_id, goods_code, goods_name, 
      ad_words, create_user_id, status, 
      spec, sale_count, cost_price, 
      market_price, category_id, category_name, 
      channel_id, label_id, stock_type, 
      stock, return_time, commitment, 
      create_date, update_date, shelf_time, 
      return_type, goods_pic, vip_price, 
      description, goods_desc)
    values (#{goodsId,jdbcType=INTEGER}, #{goodsCode,jdbcType=VARCHAR}, #{goodsName,jdbcType=VARCHAR}, 
      #{adWords,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{spec,jdbcType=VARCHAR}, #{saleCount,jdbcType=INTEGER}, #{costPrice,jdbcType=DOUBLE}, 
      #{marketPrice,jdbcType=DOUBLE}, #{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, 
      #{channelId,jdbcType=INTEGER}, #{labelId,jdbcType=INTEGER}, #{stockType,jdbcType=INTEGER}, 
      #{stock,jdbcType=INTEGER}, #{returnTime,jdbcType=DOUBLE}, #{commitment,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{shelfTime,jdbcType=TIMESTAMP}, 
      #{returnType,jdbcType=INTEGER}, #{goodsPic,jdbcType=VARCHAR}, #{vipPrice,jdbcType=DOUBLE}, 
      #{description,jdbcType=LONGVARCHAR}, #{goodsDesc,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.website.model.bean.GoodsInfoWithBLOBs" useGeneratedKeys="true" keyProperty="goodsId">
    insert into goods_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsCode != null">
        goods_code,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="adWords != null">
        ad_words,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="saleCount != null">
        sale_count,
      </if>
      <if test="costPrice != null">
        cost_price,
      </if>
      <if test="marketPrice != null">
        market_price,
      </if>
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="labelId != null">
        label_id,
      </if>
      <if test="stockType != null">
        stock_type,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="returnTime != null">
        return_time,
      </if>
      <if test="commitment != null">
        commitment,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="shelfTime != null">
        shelf_time,
      </if>
      <if test="returnType != null">
        return_type,
      </if>
      <if test="goodsPic != null">
        goods_pic,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="goodsDesc != null">
        goods_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsCode != null">
        #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="adWords != null">
        #{adWords,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        #{spec,jdbcType=VARCHAR},
      </if>
      <if test="saleCount != null">
        #{saleCount,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        #{costPrice,jdbcType=DOUBLE},
      </if>
      <if test="marketPrice != null">
        #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="labelId != null">
        #{labelId,jdbcType=INTEGER},
      </if>
      <if test="stockType != null">
        #{stockType,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null">
        #{returnTime,jdbcType=DOUBLE},
      </if>
      <if test="commitment != null">
        #{commitment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shelfTime != null">
        #{shelfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnType != null">
        #{returnType,jdbcType=INTEGER},
      </if>
      <if test="goodsPic != null">
        #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="vipPrice != null">
        #{vipPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsDesc != null">
        #{goodsDesc,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.website.model.bean.GoodsInfoWithBLOBs">
    update goods_info
    <set>
      <if test="goodsCode != null">
        goods_code = #{goodsCode,jdbcType=VARCHAR},
      </if>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="adWords != null">
        ad_words = #{adWords,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="spec != null">
        spec = #{spec,jdbcType=VARCHAR},
      </if>
      <if test="saleCount != null">
        sale_count = #{saleCount,jdbcType=INTEGER},
      </if>
      <if test="costPrice != null">
        cost_price = #{costPrice,jdbcType=DOUBLE},
      </if>
      <if test="marketPrice != null">
        market_price = #{marketPrice,jdbcType=DOUBLE},
      </if>
      <if test="categoryId != null">
        category_id = #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="labelId != null">
        label_id = #{labelId,jdbcType=INTEGER},
      </if>
      <if test="stockType != null">
        stock_type = #{stockType,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="returnTime != null">
        return_time = #{returnTime,jdbcType=DOUBLE},
      </if>
      <if test="commitment != null">
        commitment = #{commitment,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="shelfTime != null">
        shelf_time = #{shelfTime,jdbcType=TIMESTAMP},
      </if>
      <if test="returnType != null">
        return_type = #{returnType,jdbcType=INTEGER},
      </if>
      <if test="goodsPic != null">
        goods_pic = #{goodsPic,jdbcType=VARCHAR},
      </if>
      <if test="vipPrice != null">
        vip_price = #{vipPrice,jdbcType=DOUBLE},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
      <if test="goodsDesc != null">
        goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.website.model.bean.GoodsInfoWithBLOBs">
    update goods_info
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      ad_words = #{adWords,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      sale_count = #{saleCount,jdbcType=INTEGER},
      cost_price = #{costPrice,jdbcType=DOUBLE},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=INTEGER},
      label_id = #{labelId,jdbcType=INTEGER},
      stock_type = #{stockType,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      return_time = #{returnTime,jdbcType=DOUBLE},
      commitment = #{commitment,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      shelf_time = #{shelfTime,jdbcType=TIMESTAMP},
      return_type = #{returnType,jdbcType=INTEGER},
      goods_pic = #{goodsPic,jdbcType=VARCHAR},
      vip_price = #{vipPrice,jdbcType=DOUBLE},
      description = #{description,jdbcType=LONGVARCHAR},
      goods_desc = #{goodsDesc,jdbcType=LONGVARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.website.model.bean.GoodsInfo">
    update goods_info
    set goods_code = #{goodsCode,jdbcType=VARCHAR},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      ad_words = #{adWords,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      spec = #{spec,jdbcType=VARCHAR},
      sale_count = #{saleCount,jdbcType=INTEGER},
      cost_price = #{costPrice,jdbcType=DOUBLE},
      market_price = #{marketPrice,jdbcType=DOUBLE},
      category_id = #{categoryId,jdbcType=INTEGER},
      category_name = #{categoryName,jdbcType=VARCHAR},
      channel_id = #{channelId,jdbcType=INTEGER},
      label_id = #{labelId,jdbcType=INTEGER},
      stock_type = #{stockType,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      return_time = #{returnTime,jdbcType=DOUBLE},
      commitment = #{commitment,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      shelf_time = #{shelfTime,jdbcType=TIMESTAMP},
      return_type = #{returnType,jdbcType=INTEGER},
      goods_pic = #{goodsPic,jdbcType=VARCHAR},
      vip_price = #{vipPrice,jdbcType=DOUBLE}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  

	<!--查询商品列表带分页 -->
	<select id="queryAllGoodsList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		*
		FROM
		(
		SELECT
		g.goods_id goodsId,
		g.goods_code goodsCode,
		g.goods_name goodsName,
		g.cost_price costPrice,
		g.market_price
		marketPrice,
		g.stock_type stockType,
		g.stock stock,
		g.sale_count
		sale_count,
		g.status status,
		b.worker_name workerName,
		g.create_date
		createDate,
		MAX(gs.market_price) maxPrice,
		MIN(gs.market_price)
		minPrice,
		gc.category_id categoryId,
		gc.category_name categoryName,
		gc.parent_id childId,
		ca.category_name childName,
		ca.parent_id parentId,
		gca.category_name parentName,
		CONCAT_WS(
		"-",
		gca.category_name,
		ca.category_name,
		gc.category_name
		) allName
		FROM
		goods_info g
		LEFT JOIN
		bus_worker b ON b.worker_id = g.create_user_id
		LEFT JOIN goods_sku gs
		ON gs.goods_id = g.goods_id
		LEFT JOIN goods_category gc ON
		gc.category_id = g.category_id
		LEFT JOIN goods_category ca ON
		ca.category_id = gc.parent_id
		LEFT JOIN goods_category gca ON
		gca.category_id = ca.parent_id
		GROUP BY
		g.goods_id
		) gg
		where
		<if test="status != null"> gg.status = #{status,jdbcType=INTEGER} and</if>
		<if test="goodsName != null and goodsName != ''">gg.goodsName like CONCAT('%','${goodsName}','%' ) and</if>
		<if test="goodsCode != null and goodsCode != ''">gg.goodsCode=#{goodsCode} and</if>
		<if test="parent_id != null and parent_id != ''">gg.parentId=#{parent_id} and</if>
		<if test="child_id != null and child_id != ''">gg.childId=#{child_id} and</if>
		<if test="category_id != null and category_id != ''">g.category_id=#{category_id} and</if>
		gg.status !=-1 and
		1=1 order by gg.createDate desc
	</select>
	<!--查询分类列表带分页 -->
	<select id="queryGoodsListByPage" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		*
		FROM
		(
		SELECT
		g.goods_id goodsId,
		g.goods_code goodsCode,
		g.goods_name goodsName,
		g.stock goodsStock,
		g.cost_price costPrice,
		g.market_price marketPrice,
		g.sale_count sale_count,
		g.spec spec,
		g.channel_id channelId,
		c.name AS channelName,
		g.status status,
		b.worker_name workerName,
		g.create_date createDate,
		MAX(gs.market_price) maxPrice,
		MIN(gs.market_price) minPrice,
		g.category_id categoryId,
		gc.category_name categoryName,
		gc.parent_id
		childId,
		ca.category_name childName,
		ca.parent_id parentId,
		gca.category_name parentName,
		CONCAT_WS(
		"-",
		gca.category_name,
		ca.category_name,
		gc.category_name
		) allName
		FROM
		goods_info g

		LEFT JOIN
		channel c ON g.channel_id = c.id
		LEFT JOIN bus_worker b ON b.worker_id
		= g.create_user_id
		LEFT JOIN goods_sku gs ON gs.goods_id = g.goods_id

		LEFT JOIN goods_category gc ON gc.category_id = g.category_id
		LEFT JOIN
		goods_category ca ON ca.category_id = gc.parent_id
		LEFT JOIN
		goods_category gca ON gca.category_id = ca.parent_id
		GROUP BY
		g.goods_id
		) gg
		where
		<if test="status != null and status != ''"> gg.status = #{status,jdbcType=INTEGER} and</if>
		<if test="channelId != null and channelId != ''">gg.channelId = #{channelId} and</if>
		<if test="goodsName != null and goodsName != ''">gg.goodsName like CONCAT('%','${goodsName}','%' ) and</if>
		<if test="goodsCode != null and goodsCode != ''">gg.goodsCode=#{goodsCode} and</if>
		<if test="parent_id != null and parent_id != ''">gg.parentId=#{parent_id} and</if>
		<if test="child_id != null and child_id != ''">gg.childId=#{child_id} and</if>
		<if test="category_id != null and category_id != ''">gg.categoryId=#{category_id} and</if>
		gg.status !=-1 and
		1=1 order by gg.createDate desc
	</select>

	<select id="queryGoodsListCount" parameterType="java.util.Map" resultType="int">
		SELECT
		count(*)
		FROM
		(
		SELECT
		g.goods_id goodsId,
		g.goods_code goodsCode,
		g.goods_name goodsName,
		g.cost_price costPrice,
		g.market_price
		marketPrice,
		g.sale_count sale_count,
		g.channel_id channelId,
		g.spec
		spec,
		c.name AS channelName,
		g.status status,
		b.worker_name workerName,
		g.create_date createDate,
		MAX(gs.market_price) maxPrice,
		MIN(gs.market_price) minPrice,
		g.category_id categoryId,
		gc.category_name categoryName,
		gc.parent_id childId,
		ca.category_name
		childName,
		ca.parent_id parentId,
		gca.category_name parentName,
		CONCAT_WS(
		"-",
		gca.category_name,
		ca.category_name,
		gc.category_name
		)
		allName
		FROM
		goods_info g
		LEFT JOIN channel c ON g.channel_id = c.id
		LEFT
		JOIN bus_worker b ON b.worker_id = g.create_user_id
		LEFT JOIN goods_sku
		gs ON gs.goods_id = g.goods_id
		LEFT JOIN goods_category gc ON
		gc.category_id = g.category_id
		LEFT JOIN goods_category ca ON
		ca.category_id = gc.parent_id
		LEFT JOIN goods_category gca ON
		gca.category_id = ca.parent_id
		GROUP BY
		g.goods_id
		) gg
		where
		<if test="status != null and status != ''"> gg.status = #{status} and</if>
		<if test="channelId != null and channelId != ''">gg.channelId = #{channelId} and</if>
		<if test="goodsName != null and goodsName != ''">gg.goodsName like CONCAT('%','${goodsName}','%' ) and</if>
		<if test="goodsCode != null and goodsCode != ''">gg.goodsCode=#{goodsCode} and</if>
		<if test="parent_id != null and parent_id != ''">gg.parentId=#{parent_id} and</if>
		<if test="child_id != null and child_id != ''">gg.childId=#{child_id} and</if>
		<if test="category_id != null and category_id != ''">gg.categoryId=#{category_id} and</if>
		gg.status !=-1 and
		1=1 order by gg.createDate desc
	</select>



	<select id="qyById" parameterType="java.lang.Integer" resultType="java.util.Map">
		SELECT
		gi.* , gc3.category_name level3,
		gc2.category_name
		level2,
		gc1.category_name level1
		FROM
		goods_info gi
		left join
		goods_category gc3 on gi.category_id=gc3.category_id
		left join
		goods_category gc2 on gc3.parent_id=gc2.category_id
		left join
		goods_category gc1 on gc2.parent_id=gc1.category_id
		where goods_id =
		#{goodsId,jdbcType=INTEGER}
	</select>

	<select id="queryByCode" parameterType="java.lang.String" resultType="java.util.Map">
		SELECT
		gi.*,
		gk.region_id,
		gk.region_price,
		gk.region_name,
		gk.rebate_type,
		gp.pic_url,
		gk.rebate_amount,
		gk.rebate_ratio
		FROM
		goods_info gi
		LEFT JOIN goods_sku gk ON gi.goods_id = gk.goods_id
		LEFT
		JOIN goods_pic gp ON
		gp.goods_id = gi.goods_id
		WHERE gp.is_home = 1
		AND
		goods_code =
		#{goodsCode}
	</select>

	<delete id="deleteGoods" parameterType="int">
		delete
		from goods_info
		where
		goods_id = #{goodsId}
	</delete>

	<select id="getGoodsInfoList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		gi.goods_id,
		gi.goods_pic,
		gi.goods_code,
		gi.goods_name,
		gi.spec,
		gi.cost_price,
		gl.label_name,
		gi.stock,
		gi.market_price,
		gi.ad_words
		FROM
		goods_info gi LEFT JOIN
		goods_label gl ON
		gl.label_id = gi.label_id
		where 1=1
		<if test="goods_name != null">
			and gi.goods_name like CONCAT('%','${goods_name}','%')
		</if>
		<if test="goods_code != null">
			and gi.goods_code = #{goods_code}
		</if>
	</select>

	<select id="getGoodsInfoListCount" parameterType="java.util.Map" resultType="int">
		SELECT
		count(*)
		FROM
		goods_info gi LEFT JOIN
		goods_label gl ON gl.label_id = gi.label_id
		where 1=1
		<if test="goods_name != null">
			and gi.goods_name like CONCAT('%','${goods_name}','%')
		</if>
		<if test="goods_code != null">
			and gi.goods_code = #{goods_code}
		</if>
	</select>
</mapper>